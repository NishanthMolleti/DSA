https://practice.geeksforgeeks.org/problems/serialize-and-deserialize-a-binary-tree/1#

class Solution
{
    public:
    vector<int> ans;
    vector<int> serialize(Node *root) 
    {
        if(root == NULL)
        {
            ans.push_back(-1);
            return ans;
        }
        ans.push_back(root->data);
        serialize(root->left);
        serialize(root->right);
        return ans;
    }
    int i = 0;
    Node * deSerialize(vector<int> &A)
    {
       if(i == A.size()) return NULL;
       int val = A[i];
       i++;
       if(val == -1) return NULL;
       Node *root = new Node(val);
       root->left = deSerialize(A);
       root->right = deSerialize(A);
       return root;
    }
};

SC : O(N)
TC : O(N)
